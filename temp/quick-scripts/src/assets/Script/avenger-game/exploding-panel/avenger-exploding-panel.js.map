{"version":3,"sources":["assets/Script/avenger-game/exploding-panel/avenger-exploding-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,qFAA8E;AAC9E,qEAA8D;AAC9D,mEAAqD;AAE/C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA4C,kCAAY;IAAxD;QAAA,qEAmDC;QAhDG,eAAS,GAAsB,EAAE,CAAC;QAGlC,oBAAc,GAAoB,EAAE,CAAC;QAE7B,yBAAmB,GAAG,KAAK,CAAC;QAC5B,cAAQ,GAAa,IAAI,CAAC;;IA0CtC,CAAC;IAxCW,iCAAQ,GAAhB;QACI,2CAAiB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzG,2CAAiB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAE3F,CAAC;IAED,+BAAM,GAAN;QAAA,iBAKC;QAJG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;YAC3B,QAAQ,CAAC,kBAAkB,GAAG,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,sCAAa,GAArB,UAAsB,KAAK;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEO,+CAAsB,GAA9B,UAA+B,SAAS;QACpC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ;YAC3B,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;IAC3C,CAAC;IAEO,+CAAsB,GAA9B,UAA+B,SAAc;QAA7C,iBAMC;QALG,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,cAAc;YAC1C,IAAI,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAC/C,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC,CAAC;IAEO,+CAAsB,GAA9B;QACI,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,2CAAiB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;SAClE;IACL,CAAC;IA/CD;QADC,QAAQ,CAAC,2BAAe,CAAC;qDACQ;IAGlC;QADC,QAAQ,CAAC,gCAAa,CAAC;0DACa;IANpB,cAAc;QADlC,OAAO;OACa,cAAc,CAmDlC;IAAD,qBAAC;CAnDD,AAmDC,CAnD2C,EAAE,CAAC,SAAS,GAmDvD;kBAnDoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["import { G1009AnimationProviderManager } from \"../../base/animation/aka-g1009-animation-provider\";\nimport { G1009EventManager } from \"../../base/events/aka-g1009-event-manager\";\nimport AvengerSpinItem from \"../spin-panel/avenger-spin-item\";\nimport ExplodingCell from \"./avenger-exploding-cell\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ExplodingPanel extends cc.Component {\n\n    @property(AvengerSpinItem)\n    spinItems: AvengerSpinItem[] = [];\n\n    @property(ExplodingCell)\n    ExplodingCells: ExplodingCell[] = [];\n\n    private isStartExplodeCells = false;\n    private oldCells: string[] = null;\n\n    private register(): void {\n        G1009EventManager.GetInstance().register(\"StartPresentWinCombo\", this.onStartPresentWinCombo.bind(this));\n        G1009EventManager.GetInstance().register(\"DataRespond\", this.onDataRespond.bind(this));\n\n    }\n\n    onLoad() {\n        this.register();\n        this.spinItems.forEach(spinItem => {\n            spinItem.onExplodeCompleted = this.handleExplodeCompleted.bind(this);\n        });\n    }\n\n    private onDataRespond(cells) {\n        this.oldCells = cells;\n    }\n\n    private onStartPresentWinCombo(comboData) {\n        this.isStartExplodeCells = true;\n        this.spinItems.forEach(spinItem => {\n            spinItem.StartExplodeCells(comboData.explodedCells, comboData.Cells);\n        });\n\n        this.playEffectExplodeCells(comboData);\n    }\n\n    private playEffectExplodeCells(comboData: any) {\n        comboData.explodedCells.forEach(idExplodedCell => {\n            var nameSymbol = this.oldCells[idExplodedCell];\n            this.ExplodingCells[idExplodedCell].PlayEffectExplodeCells(nameSymbol);\n        });\n        this.oldCells = comboData.Cells;\n    }\n\n    private handleExplodeCompleted() {\n        if (this.isStartExplodeCells) {\n            this.isStartExplodeCells = false;\n            G1009EventManager.GetInstance().notify(\"ExplodeCellsComplete\");\n        }\n    }\n}\n"]}