{"version":3,"sources":["assets\\Script\\UI\\spin-panel\\Slot45-spin-panel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SlottyParameter } from \"../../Slot45-game-config\";\r\nimport G1009Util from \"../../base/Util/Slot45-number-converter\";\r\nimport { G1009EventManager } from \"../../base/events/Slot45-event-manager\";\r\nimport G1009SpinItemActor, { ESpinningState } from \"./Slot45-spin-item\";\r\nimport { G1009SpinItemData } from \"./Slot45-spin-item-data\";\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class G1009SpinPanelActor extends cc.Component {\r\n\r\n\t@property(G1009SpinItemActor)\r\n\tspinItems: G1009SpinItemActor[] = [];\r\n\r\n\tprivate spinItemData: G1009SpinItemData = new G1009SpinItemData();\r\n\tprivate spinningItems: G1009SpinItemActor[] = [];\r\n\tprivate isTurbo: boolean = false;\r\n\tprivate isStopImmediately: boolean = false;\r\n\tprivate spinItemScrollCount: number = 0;\r\n\tprivate spinItemStopCount: number = 0;\r\n\tprivate spinItemReadyBounceUpCount: number = 0;\r\n\tprivate isReadyToStop: boolean = false;\r\n\tprivate landingCount: number = 0;\r\n\tprivate tensions: number[] = [];\r\n\tprivate dataResponded: string[] = [];\r\n\tprivate expandWildIndices: number[] = [];\r\n\tprivate tweenHideItem: cc.Tween = null;\r\n\r\n\tprivate register(): void {\r\n\t\tG1009EventManager.GetInstance().register(\"Turbo\", this.OnTurbo.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"SpinStarted\", this.OnSpinStarted.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"DataRespond\", this.onDataRespond.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"StopImmediately\", this.stopImmediately.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"SetItems\", this.SetItems.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"SetOldItems\", this.SetOldItems.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"TensionStarted\", this.onTensionStarted.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"TensionGenerated\", this.onTensionGenerated.bind(this));\r\n\t\t//G1009EventManager.GetInstance().register(\"PresentWinStart\", this.onHideItems.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"ResetAllLine\", this.onResetAllLine.bind(this));\r\n\t\t// G1009EventManager.GetInstance().register(\"JackpotStarted\", this.onHideItems.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"PresentAllWinComplete\", this.onPresentAllWinComplete.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"ExpandWildStarted\", this.onExpandWildStarted.bind(this));\r\n\t\tG1009EventManager.GetInstance().register(\"ExpandWildHide\", this.onExpandWildHide.bind(this));\r\n\t}\r\n\r\n\tprotected onLoad(): void {\r\n\t\tthis.register();\r\n\t\tlet initData = Object.assign({}, this.spinItemData);\r\n\t\tfor (let index = 0; index < this.spinItems.length; index++) {\r\n\t\t\tconst spinItem = this.spinItems[index];\r\n\t\t\tspinItem.Init(initData);\r\n\t\t\tspinItem.onStopSpinCompleted = this.spinItemStopCompleted.bind(this);\r\n\t\t\tspinItem.onReadyToStop = this.readyToStop.bind(this);\r\n\t\t\tspinItem.onReadyBounceUp = this.spinItemReadyBounceUp.bind(this);\r\n\t\t}\r\n\t\tthis.reset();\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.Enable());\r\n\t}\r\n\r\n\tprivate onTensionGenerated(indices: number[]): void {\r\n\t\tthis.tensions = indices;\r\n\t}\r\n\r\n\tprivate onTensionStarted(id: number): void {\r\n\t\tthis.spinItems[id].TensionStarted();\r\n\t}\r\n\r\n\tprivate readyToStop(): void {\r\n\t\tthis.spinItemScrollCount++;\r\n\t}\r\n\r\n\tprivate OnTurbo(isTurbo: boolean) {\r\n\t\tthis.isTurbo = isTurbo;\r\n\t}\r\n\r\n\tprivate onDataRespond(spinResult: string[]) {\r\n\t\tthis.dataResponded = spinResult;\r\n\t\tif (this.isStopImmediately && this.checkReadyToStop()) {\r\n\t\t\tthis.stopSpin(spinResult);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tG1009Util.Instance().WaitUntil(this.checkReadyToStop.bind(this)).then(() => {\r\n\t\t\t\tthis.stopSpin(spinResult);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic OnSpinStarted() {\r\n\t\tthis.reset();\r\n\t\tthis.resetExpandWild();\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.Enable());\r\n\t\tthis.spin(this.isTurbo);\r\n\t\tif (this.isTurbo === true) {\r\n\t\t\tthis.stopImmediately();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic spin(isTurbo: boolean) {\r\n\t\tthis.spinningItems = this.spinItems;\r\n\t\tlet delayTime = isTurbo ? 0 : this.spinItemData.DelayTimeSpinBetweenItems;\r\n\t\tfor (let index = 0; index < this.spinItems.length; index++) {\r\n\t\t\tconst spinItem = this.spinItems[index];\r\n\t\t\tlet seq = cc.sequence(\r\n\t\t\t\tcc.delayTime(delayTime * index)\r\n\t\t\t\t, cc.callFunc(() => {\r\n\t\t\t\t\tspinItem.Spin();\r\n\t\t\t\t\tif (index == this.spinItems.length - 1) {\r\n\t\t\t\t\t\tthis.isReadyToStop = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this, spinItem));\r\n\t\t\tthis.node.runAction(seq);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate stopImmediately() {\r\n\t\tthis.landingCount = 0;\r\n\t\tthis.isStopImmediately = true;\r\n\r\n\t\tif (this.checkDataResponde() && this.checkReadyToStop()) {\r\n\t\t\tthis.node.stopAllActions();\r\n\t\t\tfor (var index = this.spinItemStopCount; index < this.spinningItems.length; index++) {\r\n\t\t\t\tif (this.spinningItems[index].state == ESpinningState.Idle) {\r\n\t\t\t\t\tthis.spinningItems[index].Spin();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.spinningItems.forEach(i => i.StopImmediately(this.isTurbo));\r\n\t\t\tthis.spinningItems.forEach(i => i.Stop(this.dataResponded));\r\n\r\n\t\t\tif (this.spinItemStopCount >= this.spinningItems.length) {\r\n\t\t\t\tthis.checkSpinEnd();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate checkReadyToStop() {\r\n\t\treturn this.isReadyToStop && this.spinItemScrollCount == this.spinItems.length;\r\n\t}\r\n\r\n\tprivate spinItemStopCompleted(cellIndices: number[]): void {\r\n\t\tG1009EventManager.GetInstance().notify(\"SpinItemStopCompleted\", {\r\n\t\t\tcellIndices: cellIndices,\r\n\t\t});\r\n\t\tthis.spinItemStopCount++;\r\n\t\tthis.checkSpinEnd();\r\n\t}\r\n\r\n\tprivate spinItemReadyBounceUp(): void {\r\n\t\tthis.spinItemReadyBounceUpCount++;\r\n\t\tif (this.isStopImmediately && this.spinItemReadyBounceUpCount == this.spinningItems.length) {\r\n\t\t\tthis.spinItems.forEach(spinItem => spinItem.AllowBounceUp());\r\n\t\t}\r\n\t}\r\n\r\n\tprivate checkSpinEnd(): void {\r\n\t\tlet isSpinEnd = this.spinItemStopCount >= this.spinningItems.length && this.landingCount == 0;\r\n\r\n\t\tif (isSpinEnd) {\r\n\t\t\tthis.spinEnd();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate spinEnd(): void {\r\n\t\tthis.reset();\r\n\t\tG1009EventManager.GetInstance().notify(\"SpinComplete\");\r\n\t}\r\n\r\n\tprivate stopSpin(items: string[]) {\r\n\t\tif (this.isStopImmediately) {\r\n\t\t\tthis.stopImmediately();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (let index = 0; index < this.spinningItems.length; index++) {\r\n\t\t\tconst spinItem = this.spinningItems[index];\r\n\t\t\tlet tensionDuration = 0;\r\n\t\t\tif (this.tensions.indexOf(index) != -1) {\r\n\t\t\t\ttensionDuration = this.spinItemData.TensionDuration * (this.tensions.indexOf(index) + 1);\r\n\t\t\t}\r\n\r\n\t\t\tlet seq = cc.sequence(\r\n\t\t\t\tcc.delayTime(this.spinItemData.DelayTimeStopBetweenItems * index + tensionDuration)\r\n\t\t\t\t, cc.callFunc(() => {\r\n\t\t\t\t\tspinItem.Stop(items);\r\n\t\t\t\t}, this, spinItem));\r\n\t\t\tthis.node.runAction(seq);\r\n\t\t}\r\n\t}\r\n\r\n\tonExpandWildStarted(expandWildIndices: number[]): void {\r\n\t\tthis.expandWildIndices = Object.assign([], expandWildIndices);\r\n\t\texpandWildIndices.forEach(cellIndex => {\r\n\t\t\tlet reelIndex = SlottyParameter.GetReelIndex(cellIndex);\r\n\t\t\tcc.tween(this.spinItems[reelIndex].node)\r\n\t\t\t\t.to(0.1, { opacity: 0 })\r\n\t\t\t\t.start();\r\n\t\t});\r\n\t}\r\n\r\n\tonExpandWildHide(): void {\r\n\t\tthis.spinItems.forEach(spinItem => {\r\n\t\t\tspinItem.node.y = 0;\r\n\t\t\tspinItem.node.opacity = 255;\r\n\t\t});\r\n\t}\r\n\r\n\tonLandingGenerated(data: number[]): void {\r\n\t\tthis.landingCount = data.length;\r\n\t}\r\n\r\n\tonLandingStarted(): void {\r\n\t}\r\n\r\n\tonLandingCompleted(): void {\r\n\t\tthis.landingCount--;\r\n\t\tthis.checkSpinEnd();\r\n\t}\r\n\r\n\tprivate SetItems(reelData: string[]) {\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.SetItems(reelData));\r\n\t}\r\n\r\n\tprivate SetOldItems(data: any) {\r\n\t\tlet indices = data.expandWildIndices.map((index: number) => SlottyParameter.GetReelIndex(index));\r\n\t\tthis.spinItems.forEach((spinItem, index) => {\r\n\t\t\tif (!indices.includes(SlottyParameter.GetReelIndex(index))) {\r\n\t\t\t\tspinItem.node.opacity = 255;\r\n\t\t\t} else {\r\n\t\t\t\tspinItem.node.opacity = 0;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.SetOldItems(data.Cells));\r\n\t\tif (data.WinLines.length > 0) {\r\n\t\t\tthis.onHideItems();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onHideItems(): void {\r\n\t\t// this.spinItems.forEach(spinItem => spinItem.node.opacity = 0)\r\n\t\tthis.tweenHideItem = cc.tween(this.node).delay(0.1).call(() => {\r\n\t\t\tthis.spinItems.forEach(spinItem => spinItem.node.opacity = 0)\r\n\t\t}).start();\r\n\t}\r\n\r\n\tprivate onResetAllLine(): void {\r\n\t\tthis.resetItemNotExpandWild();\r\n\t}\r\n\r\n\tprivate checkDataResponde(): boolean {\r\n\t\treturn this.dataResponded.length > 0;\r\n\t}\r\n\r\n\tprivate reset() {\r\n\t\tthis.isReadyToStop = false;\r\n\t\tthis.spinItemReadyBounceUpCount = 0;\r\n\t\tthis.isStopImmediately = false;\r\n\t\tthis.spinItemStopCount = 0;\r\n\t\tthis.spinItemScrollCount = 0;\r\n\t\tthis.spinningItems = [];\r\n\t\tthis.tensions = [];\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.Reset());\r\n\t\tthis.resetItemNotExpandWild();\r\n\t\tthis.dataResponded = [];\r\n\t}\r\n\r\n\tprivate resetItemNotExpandWild(): void {\r\n\t\tthis.tweenHideItem && this.tweenHideItem.stop();\r\n\t\tlet indices = this.expandWildIndices.map(index => SlottyParameter.GetReelIndex(index));\r\n\t\tthis.spinItems.forEach((spinItem, index) => {\r\n\t\t\tif (!indices.includes(SlottyParameter.GetReelIndex(index))) {\r\n\t\t\t\tspinItem.node.opacity = 255;\r\n\t\t\t} else {\r\n\t\t\t\tspinItem.node.opacity = 0;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate resetExpandWild(): void {\r\n\t\tthis.expandWildIndices = [];\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.node.opacity = 255);\r\n\t}\r\n\r\n\tprivate onPresentAllWinComplete(): void {\r\n\t\tthis.spinItems.forEach(spinItem => spinItem.Reset());\r\n\t\tthis.resetItemNotExpandWild();\r\n\t}\r\n}\r\n"]}