{"version":3,"sources":["assets/Script/avenger-game/border-win-cell-panel/border-win-cell-panel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SlottyParameter } from \"../../aka-g1009-game-config\";\nimport { G1009AnimationProviderManager } from \"../../base/animation/aka-g1009-animation-provider\";\nimport { G1009EventManager } from \"../../base/events/aka-g1009-event-manager\";\n\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class BorderWinCellPanel extends cc.Component {\n\n    @property(sp.Skeleton)\n    arrSpineBorder: sp.Skeleton[] = [];\n\n    @property(cc.String)\n    nameSpineAnimation: string = \"\";\n\n    protected onLoad(): void {\n        this.register();\n    }\n\n    private register(): void {\n        G1009EventManager.GetInstance().register(\"ShowWinCells\", this.onShowWinCells.bind(this));\n    }\n\n    private onShowWinCells(arrWinCells: []) {\n        var dataSequence = this.generateDataSequenceFollowReel([...arrWinCells]);\n        this.playAnimationBorderWinCell(dataSequence);\n\n    }\n    generateDataSequenceFollowReel(arrIndexWinCells: number[]): number[] {\n        var arrSequenceIndexCell = [];\n        for (let reel = 0; reel < SlottyParameter.GetReelCount(); reel++) {\n            arrSequenceIndexCell.push([]);\n        }\n        arrIndexWinCells.forEach(indexCell => {\n            let reelCell = SlottyParameter.GetReelIndex(indexCell);\n            arrSequenceIndexCell[reelCell].push(indexCell);\n        });\n        return arrSequenceIndexCell;\n    }\n\n    playAnimationBorderWinCell(dataSequenceIndexCell) {\n        var dataSpine = G1009AnimationProviderManager.Instance().GetAnimation(this.nameSpineAnimation);\n        for (let index = 0; index < dataSequenceIndexCell.length; index++) {\n            let countIndex = index;\n            let arrIndex = dataSequenceIndexCell[countIndex];\n            let seq = cc.sequence(\n\t\t\t\tcc.delayTime(0.1 * countIndex)\n\t\t\t\t, cc.callFunc(() => {\n                    for (let index = 0; index < arrIndex.length; index++) {\n                        var spineBorder = this.arrSpineBorder[arrIndex[index]];\n                        spineBorder.node.active = true;\n                        spineBorder.skeletonData = (dataSpine);\n                        spineBorder.setAnimation(0, \"animation\", false);\n                    }\n\t\t\t\t}, this, arrIndex));\n\t\t\tthis.node.runAction(seq);\n        }\n    }\n\n}\n"]}