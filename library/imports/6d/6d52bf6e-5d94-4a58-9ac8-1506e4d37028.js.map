{"version":3,"sources":["assets\\Script\\base\\animation\\Slot45-spine-animation.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Slot45AnimationActor from \"./Slot45-animation\";\r\nimport Slot45SpineAnimationHandler from \"./Slot45-spine-animation-handler\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot45SpineAnimationActor extends Slot45AnimationActor {\r\n\r\n    @property\r\n    skeletonData: sp.SkeletonData = new sp.SkeletonData;\r\n\r\n\r\n    @property\r\n    defaultDuration: number = 1;\r\n\r\n    @property\r\n    animationData: Slot45SpineAnimationData[] = [];\r\n \r\n    isLoadCompleted: boolean = false;\r\n    spineSkeleton = null;\r\n    animationHandler= null;\r\n    trackEntry = null;\r\n    spineData:Slot45SpineData = null;\r\n    \r\n    public constructor()\r\n    {\r\n        super();\r\n        this.isLoadCompleted= false;\r\n        this.spineSkeleton = null;\r\n        this.animationHandler= null;\r\n        this.trackEntry = null;\r\n        this.spineData = null;\r\n    }\r\n    public Play(target: cc.Node, events: Function[], callback: Function): void {\r\n        this.animationHandler = new Slot45SpineAnimationHandler(this, target);\r\n        this.animationHandler.Play(target, events, callback);\r\n    }\r\n\r\n    public Stop(isCallComplete: boolean): void {\r\n        if (this.animationHandler) {\r\n            this.animationHandler.Stop(isCallComplete);\r\n            this.animationHandler.Destroy();\r\n            this.animationHandler = null;\r\n        }\r\n        this.reset();\r\n    }\r\n\r\n    public Clone(): any {\r\n        let animation = new Slot45SpineAnimationActor;\r\n        animation.skeletonData = this.skeletonData;\r\n        animation.defaultDuration = this.defaultDuration;\r\n        animation.animationData = this.animationData;    \r\n        return animation;\r\n    }\r\n\r\n    public GetDuration(): number {\r\n        let duration = this.defaultDuration;\r\n        if (this.trackEntry) {\r\n            duration = this.trackEntry.animationEnd;\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    public GetIsPlaying(): any{\r\n        return this.trackEntry && ( this.trackEntry.trackTime <= this.trackEntry.animationEnd);\r\n     }\r\n\r\n    private reset(): void {\r\n        this.isLoadCompleted = null;\r\n        this.spineSkeleton = null;\r\n        this.trackEntry = null;\r\n    }\r\n}\r\n\r\n\r\nexport  class Slot45SpineAnimationData {\r\n    public AnimationName: string;\r\n    public constructor(){};\r\n}\r\n\r\n\r\nexport class Slot45SpineData {\r\n\r\n    public Name: string ;\r\n    public IsLoop: boolean = false;\r\n    public TrackIndex: number = 0;\r\n    public TimeScale: number = 0;\r\n    public IsCallComplete: boolean = false;\r\n    public Events: Slot45SpineEventData[] = [];\r\n    public StaticSpriteFrame: cc.SpriteFrame = null;\r\n    public constructor() {\r\n        \r\n        this.Name = \"animation\";\r\n        this.IsLoop = false;\r\n        this.TrackIndex = 0;\r\n        this.TimeScale = 0;\r\n        this.IsCallComplete = false;\r\n        this.Events = [];\r\n        this.StaticSpriteFrame =new cc.SpriteFrame;\r\n    };\r\n}\r\n\r\n\r\nexport class Slot45SpineEventData {\r\n    public Name: string = '';\r\n    public Time: number = 0;\r\n    public constructor(){};\r\n}"]}