{"version":3,"sources":["assets\\Script\\UI\\present-win\\Slot45-present-win-line-panel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+EAA4E;AAC5E,qDAAmD;AAE7C,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAqD,2CAAY;IAAjE;QAAA,qEA6BC;QA3BG,WAAK,GAAuB,EAAE,CAAC;;IA2BnC,CAAC;IAzBa,wCAAM,GAAhB;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,yBAAkB,CAAC,CAAC;IACvE,CAAC;IACO,0CAAQ,GAAhB;QAEI,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClF,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3F,CAAC;IAEO,4CAAU,GAAlB,UAAmB,IAAc;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACzB,yCAAkB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,OAAO,EAAE,eAAe,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1F,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAChD;YACI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;gBACnD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;SACrC;IAEL,CAAC;IAEO,6CAAW,GAAnB;QAEI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;IAC5C,CAAC;IA5BgB,uBAAuB;QAD3C,OAAO;OACa,uBAAuB,CA6B3C;IAAD,8BAAC;CA7BD,AA6BC,CA7BoD,EAAE,CAAC,SAAS,GA6BhE;kBA7BoB,uBAAuB","file":"","sourceRoot":"/","sourcesContent":["import { Slot45EventManager } from \"../../base/events/Slot45-event-manager\";\r\nimport Slot45WinLineActor from \"./Slot45-win-line\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot45WinLinePanelActor extends cc.Component {\r\n\r\n    lines: Slot45WinLineActor[]=[];\r\n\r\n    protected onLoad(): void {\r\n        this.register();\r\n        this.lines = this.node.getComponentsInChildren(Slot45WinLineActor);\r\n    }\r\n    private register()\r\n    {\r\n        Slot45EventManager.GetInstance().register(\"ShowLine\", this.OnShowLine.bind(this));\r\n        Slot45EventManager.GetInstance().register(\"ResetAllLine\", this.hideAllLine.bind(this));\r\n    }\r\n\r\n    private OnShowLine(line: number[]) {\r\n        this.hideAllLine();\r\n\t\tSlot45EventManager.GetInstance().notify('PlaySFX', { sfxName: 'sfx_show_line', isLoop: false });\r\n        for (let index = 0; index < line.length; index++)\r\n        {\r\n            if (line[index] >= 0 && line[index] < this.lines.length)\r\n                this.lines[line[index]].Show()\r\n        }\r\n        \r\n    }\r\n\r\n    private hideAllLine()\r\n    {\r\n        this.lines.forEach(line => line.Hide());\r\n    }\r\n}\r\n"]}