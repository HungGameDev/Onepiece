{"version":3,"sources":["assets/Script/UI/popup/aka-g1009-bet-button.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qFAA8E;AAC9E,gFAAyE;AACzE,wEAAiE;AACjE,uDAAkD;AAE5C,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAiD,uCAAgB;IAAjE;QAAA,qEAmCC;QAhCG,cAAQ,GAAW,CAAC,CAAC,CAAC;QAEtB,mBAAa,GAAa,IAAI,CAAC;;IA8BnC,CAAC;IA5BU,mCAAK,GAAZ;QACI,2CAAiB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9F,2CAAiB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,2CAAiB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAES,iDAAmB,GAA7B;QAEI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,mCAAa,CAAC,WAAW,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;QACrG,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAEQ,2CAAa,GAAb;QACL,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,mCAAa,CAAC,WAAW,EAAE,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,mCAAa,CAAC,WAAW,EAAE,CAAC,oBAAoB,EAAE,EACtK;YACI,2CAAiB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzE;IAEL,CAAC;IAEO,mDAAqB,GAA7B,UAA8B,KAAa;QACvC,OAAO,mCAAa,CAAC,WAAW,EAAE,CAAC,2BAA2B,CAAC,KAAK,CAAC,IAAI,2CAAiB,CAAC,WAAW,EAAE,CAAC,UAAU,EAAE,CAAC;IAC1H,CAAC;IAEO,0CAAY,GAApB,UAAqB,KAAa;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;IAChG,CAAC;IA/BD;QADC,QAAQ;yDACa;IAEtB;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;8DACY;IALd,mBAAmB;QADvC,OAAO;OACa,mBAAmB,CAmCvC;IAAD,0BAAC;CAnCD,AAmCC,CAnCgD,0BAAgB,GAmChE;kBAnCoB,mBAAmB","file":"","sourceRoot":"/","sourcesContent":["import { G1009EventManager } from \"../../base/events/aka-g1009-event-manager\";\nimport { G1009BalanceModel } from \"../../models/aka-g1009-balance-model\";\nimport { G1009BetModel } from \"../../models/aka-g1009-bet-model\";\nimport G1009ButtonActor from \"./aka-g1009-button\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class G1009BetButtonActor extends G1009ButtonActor {\n\n    @property\n    betIndex: number = -1;\n    @property(cc.Label)\n    txtButtonText: cc.Label = null;\n    \n    public start(): void {\n        G1009EventManager.GetInstance().register(\"ShowBetPanel\", this.SetButtonTextValues.bind(this));\n        G1009EventManager.GetInstance().register(\"SetBetIncrease\", this.SetTextColor.bind(this));\n        G1009EventManager.GetInstance().register(this.EventName, this.SetTextColor.bind(this));\n        this.SetTextColor(0);\n    }\n\n    protected SetButtonTextValues(): void {\n\n        this.txtButtonText.string = G1009BetModel.GetInstance().GetBetPointByIndex(this.betIndex).toString();\n        this.button.interactable = this.validatorButtonSetBet(this.betIndex);\n    }\n\n    override onButtonClick(): void {\n        if (this.validatorButtonSetBet(this.betIndex) && G1009BetModel.GetInstance().GetBetPerLinebyIndex(this.betIndex) != G1009BetModel.GetInstance().GetCurrentBetPerLine())\n        {\n            G1009EventManager.GetInstance().notify(this.EventName, this.betIndex);\n        }\n\t\n    }\n    \n    private validatorButtonSetBet(index: number): boolean {\n        return G1009BetModel.GetInstance().GetNextTotalBetPointbyIndex(index) <= G1009BalanceModel.GetInstance().GetBalance();\n    }\n\n    private SetTextColor(index: number): void{      \n            this.txtButtonText.node.color = this.betIndex != index ? cc.Color.GRAY : cc.Color.WHITE;\n    }\n}\n"]}