{"version":3,"sources":["assets\\Script\\base\\controller\\Slot45-game-controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0FAAoF;AACpF,uEAAoE;AAE9D,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAkD,wCAAY;IAA9D;QAAA,qEA+QC;QA5QQ,UAAI,GAAQ,IAAI,CAAC;QACjB,kBAAY,GAAU,EAAE,CAAC;QACzB,aAAO,GAAY,KAAK,CAAC;QACzB,YAAM,GAAQ,IAAI,CAAC;QACnB,2BAAqB,GAAW,CAAC,CAAC;QAClC,0BAAoB,GAAW,CAAC,CAAC;QACjC,mBAAa,GAAW,CAAC,CAAC;QAC1B,iBAAW,GAAY,KAAK,CAAC;QAC7B,YAAM,GAAY,KAAK,CAAC;QAExB,gBAAU,GAAW,CAAC,CAAC;;IAkQhC,CAAC;6BA/QoB,oBAAoB;IAe1B,gCAAW,GAAzB;QACC,IAAI,CAAC,sBAAoB,CAAC,QAAQ;YACjC,sBAAoB,CAAC,QAAQ,GAAG,IAAI,sBAAoB,EAAE,CAAC;QAC5D,OAAO,sBAAoB,CAAC,QAAQ,CAAC;IACtC,CAAC;IAEO,uCAAQ,GAAhB;QACC,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtF,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClF,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5E,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxF,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9F,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxG,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACpG,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChG,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAClG,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9E,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxF,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9F,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAGlF,yCAAkB,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3G,CAAC;IAEO,qDAAsB,GAA9B;QACC,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEO,2CAAY,GAApB;QACC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACpB,CAAC;IAEO,yCAAU,GAAlB;QACC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACrB,CAAC;IAEO,yCAAU,GAAlB;QACC,OAAO,CAAC,IAAI,CAAC,cAAc,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACrB,CAAC;IAEM,2CAAY,GAAnB;QACC,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAES,qCAAM,GAAhB;QACC,IAAI,sBAAoB,CAAC,QAAQ,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,+EAA+E,CAAC,CAAC;SACjG;QACD,sBAAoB,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACjB,CAAC;IAEO,uCAAQ,GAAhB,UAAiB,IAAS;QACzB,oBAAoB;QACpB,yCAAyC;QACzC,yCAAyC;IAC1C,CAAC;IAEO,4CAAa,GAArB,UAAsB,IAAS;QAC9B,wCAAwC;IACzC,CAAC;IAEO,gDAAiB,GAAzB;IACA,CAAC;IAEO,iDAAkB,GAA1B;QACC,IAAI,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAA5B,CAA4B,CAAC,CAAA;QACzF,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QAC5C,yCAAkB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACtF,CAAC;IAEO,4CAAa,GAArB;QACC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,WAAW,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,eAAe,EAAE,EAAE,CAAA;QACxD,yCAAkB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IAEO,sCAAO,GAAf,UAAgB,OAAgB;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAEO,+CAAgB,GAAxB,UAAyB,IAAS;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;SACzD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,EAAE;YACjD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;SACxD;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;SACxC;QACD,IAAI,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,EAAE;YACjD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;SACxD;QACD,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC/B,yCAAkB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAChF;QACD,yCAAkB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACnE,yCAAkB,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC;IAEO,oDAAqB,GAA7B;QACC,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEO,kDAAmB,GAA3B;QACC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,wDAAwD;QACxD,4CAA4C;QAC5C,wEAAwE;QAExE,kCAAkC;QAClC,cAAc;IACf,CAAC;IAEM,8CAAe,GAAtB,UAAuB,IAAgB;QAAhB,qBAAA,EAAA,WAAgB;QACtC,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QACvC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC;IAC1C,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,IAAgB;QAAhB,qBAAA,EAAA,WAAgB;QACvC,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QACvC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrG,CAAC;IAEM,uDAAwB,GAA/B,UAAgC,IAAgB;QAAhB,qBAAA,EAAA,WAAgB;QAC/C,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QACvC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACrD,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,IAAgB;QAAhB,qBAAA,EAAA,WAAgB;QACvC,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QACvC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC;IACnE,CAAC;IAEM,oDAAqB,GAA5B,UAA6B,IAAgB;QAAhB,qBAAA,EAAA,WAAgB;QAC5C,IAAI,IAAI,IAAI,IAAI,EAAE;YAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAAE;QACvC,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEM,mDAAoB,GAA3B,UAA4B,YAAwB;QAAxB,6BAAA,EAAA,mBAAwB;QACnD,IAAI,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC;YAC5C,OAAO,KAAK,CAAC;QACd,IAAI,YAAY,IAAI,IAAI,EAAE;YAAE,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAAE;QAE/D,IAAI,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/B,CAA+B,CAAC,CAAC;QAC1E,OAAO,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;IACnG,CAAC;IAEM,qDAAsB,GAA7B,UAA8B,YAAwB;QAAxB,6BAAA,EAAA,mBAAwB;QACrD,IAAI,YAAY,IAAI,IAAI,EAAE;YAAE,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAAE;QAC/D,IAAI,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAA3B,CAA2B,CAAC,CAAC;QACtE,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,IAAI,IAAI,CAAC;IAC/E,CAAC;IAEM,qDAAsB,GAA7B,UAA8B,YAAwB;QAAxB,6BAAA,EAAA,mBAAwB;QACrD,IAAI,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC;YAC5C,OAAO,KAAK,CAAC;QACd,IAAI,YAAY,IAAI,IAAI,EAAE;YAAE,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SAAE;QAC/D,IAAI,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,EAA/B,CAA+B,CAAC,CAAC;QAC1E,OAAO,YAAY,IAAI,IAAI,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,IAAI,IAAI,IAAI,WAAW,CAAC,WAAW,CAAC;IAC1G,CAAC;IAEM,wDAAyB,GAAhC;QACC,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACrD,CAAC;IAEM,gDAAiB,GAAxB;QACC,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;IACrC,CAAC;IAEM,uDAAwB,GAA/B;QACC,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACnC,CAAC;IAEM,+CAAgB,GAAvB;QACC,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IAEM,mDAAoB,GAA3B;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;IACpC,CAAC;IAEM,2CAAY,GAAnB;QACC,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,CAAC;QAC5C,OAAO,SAAS,CAAC;IAClB,CAAC;IAEO,0DAA2B,GAAnC,UAAoC,SAAc;QACjD,IAAI,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC;QACjC,IAAI,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE;YACrC,SAAS,CAAC,UAAU,GAAG,cAAc,CAAC;SACtC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAwB,EAAE,CAAwB,IAAI,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAA,CAAC,CAAC,CAAC,CAAC;QAC/G,SAAS,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC9B,CAAC;IAEO,8CAAe,GAAvB,UAAwB,SAAc;QACrC,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,IAAI,cAAc,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACnC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,EAAE;YAC1I,OAAO,GAAG,EAAE,CAAC;YACb,QAAQ,CAAC,OAAO,CAAC,UAAC,SAAc,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAvB,CAAuB,CAAC,CAAC;YAC9D,WAAW,CAAC,OAAO,CAAC,UAAC,WAAgB,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAzB,CAAyB,CAAC,CAAC;SACrE;aACI,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;YACtC,OAAO,GAAG,EAAE,CAAC;SACb;QACD,IAAI,cAAc,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE;YACrC,gCAAgC;YAChC,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;SACjC;QACD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAwB,EAAE,CAAwB,IAAI,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAA,CAAC,CAAC,CAAC,CAAC;QAC/G,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,qDAAsB,GAA9B,UAA+B,QAA+B;QAC7D,IAAI,aAAa,GAAU,EAAE,CAAC;QAC9B,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,IAAI,SAAS,GAAa,EAAE,CAAC;QAC7B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACrD,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3C,OAAO,CAAC,OAAO,CAAC,UAAA,IAAI,IAAM,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC;YACtD,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;YACpD,QAAQ,CAAC,KAAK,CAAC,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EAAtB,CAAsB,CAAC,CAAC;SAEzE;QACD,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;QACnD,OAAO,IAAI,8CAAmB,CAAC,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9E,CAAC;IAEM,yCAAU,GAAjB;QACC,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEO,+CAAgB,GAAxB;QACC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IACzB,CAAC;IAEM,8CAAe,GAAtB;QACC,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAEM,0CAAW,GAAlB;QACC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC3B,CAAC;;IA9QmB,oBAAoB;QADxC,OAAO;OACa,oBAAoB,CA+QxC;IAAD,2BAAC;CA/QD,AA+QC,CA/QiD,EAAE,CAAC,SAAS,GA+Q7D;kBA/QoB,oBAAoB","file":"","sourceRoot":"/","sourcesContent":["import { Slot45WinLineResult } from \"../../UI/present-win/Slot45-present-win-panel\";\r\nimport { Slot45EventManager } from \"../events/Slot45-event-manager\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot45GameController extends cc.Component {\r\n\tprivate static instance: Slot45GameController;\r\n\r\n\tprivate data: any = null;\r\n\tprivate featureDatas: any[] = [];\r\n\tprivate isTurbo: boolean = false;\r\n\tprivate oldata: any = null;\r\n\tprivate freespinTotalWinPoint: number = 0;\r\n\tprivate jackpotTotalWinPoint: number = 0;\r\n\tprivate totalWinPoint: number = 0;\r\n\tprivate isFreespins: boolean = false;\r\n\tprivate isAuto: boolean = false;\r\n\r\n\tprivate comboCount: number = 0;\r\n\r\n\tpublic static GetInstance() {\r\n\t\tif (!Slot45GameController.instance)\r\n\t\t\tSlot45GameController.instance = new Slot45GameController();\r\n\t\treturn Slot45GameController.instance;\r\n\t}\r\n\r\n\tprivate register(): void {\r\n\t\tSlot45EventManager.GetInstance().register(\"ActiveAuto\", this.onActiveAuto.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"StopAuto\", this.onStopAuto.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"Turbo\", this.onTurbo.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"SpinStarted\", this.onSpinStarted.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"NextScrollData\", this.onNextScrollData.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"featureWinCompleted\", this.onfeatureWinCompleted.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"featureWinstarted\", this.onfeatureWinstarted.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"BonusWinStarted\", this.onBonusWinStarted.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"BonusWinComplete\", this.onBonusWinComplete.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"resume\", this.onResume.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"resumeBonus\", this.onResumeBonus.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"EnterFreespins\", this.onEnterFreespins.bind(this));\r\n\t\tSlot45EventManager.GetInstance().register(\"EndRound\", this.onEndRound.bind(this));\r\n\r\n\r\n\t\tSlot45EventManager.GetInstance().register(\"StartPresentWinCombo\", this.onStartPresentWinCombo.bind(this));\r\n\t}\r\n\r\n\tprivate onStartPresentWinCombo() {\r\n\t\tthis.comboCount++;\r\n\t}\r\n\r\n\tprivate onActiveAuto(): void {\r\n\t\tthis.isAuto = true;\r\n\t}\r\n\r\n\tprivate onStopAuto(): void {\r\n\t\tthis.isAuto = false;\r\n\t}\r\n\r\n\tprivate onEndRound(): void {\r\n\t\tconsole.warn(\"onEndRound: \",this.comboCount);\r\n\t\tthis.comboCount = 0;\r\n\t}\r\n\r\n\tpublic IsActiveAuto(): boolean {\r\n\t\treturn this.isAuto;\r\n\t}\r\n\r\n\tprotected onLoad(): void {\r\n\t\tif (Slot45GameController.instance) {\r\n\t\t\tthrow new Error(\"Error: Instantiation failed: Use GameController.getInstance() instead of new.\");\r\n\t\t}\r\n\t\tSlot45GameController.instance = this;\r\n\t\tthis.register();\r\n\t}\r\n\r\n\tprivate onResume(data: any) {\r\n\t\t// this.data = data;\r\n\t\t// this.oldata = Object.assign({}, data);\r\n\t\t// this.featureDatas = data.featureDatas;\r\n\t}\r\n\r\n\tprivate onResumeBonus(data: any) {\r\n\t\t//this.oldata = Object.assign({}, data);\r\n\t}\r\n\r\n\tprivate onBonusWinStarted(): void {\r\n\t}\r\n\r\n\tprivate onBonusWinComplete(): void {\r\n\t\tvar filterFeatureDatas = this.data.featureDatas.filter(x => !x.hitRule.includes(\"bonus\"))\r\n\t\tthis.featureDatas = filterFeatureDatas;\r\n\t\tthis.data.featureDatas = filterFeatureDatas;\r\n\t\tSlot45EventManager.GetInstance().notify(\"featureWinCompleted\", { hitRule: \"bonus\" });\r\n\t}\r\n\r\n\tprivate onSpinStarted(): void {\r\n\t\tthis.comboCount = 0;\r\n\t\tvar requestData = { isFreespin: this.CheckIsFreespin() }\r\n\t\tSlot45EventManager.GetInstance().notify(\"SpinRequest\", requestData);\r\n\t}\r\n\r\n\tprivate onTurbo(isTurbo: boolean) {\r\n\t\tthis.isTurbo = isTurbo;\r\n\t}\r\n\r\n\tprivate onNextScrollData(data: any): void {\r\n\t\tthis.data = this.processSpinData(data);\r\n\t\tif (data.featureDatas.length > 0) {\r\n\t\t\tthis.featureDatas = Object.assign([], data.featureDatas);\r\n\t\t}\r\n\t\tif (data.hasOwnProperty(\"freespintotalWinPoint\")) {\r\n\t\t\tthis.freespinTotalWinPoint = data.freespintotalWinPoint;\r\n\t\t}\r\n\t\tif (data.hasOwnProperty(\"totalWinPoint\")) {\r\n\t\t\tthis.totalWinPoint = data.totalWinPoint;\r\n\t\t}\r\n\t\tif (data.hasOwnProperty(\"freespintotalWinPoint\")) {\r\n\t\t\tthis.freespinTotalWinPoint = data.freespintotalWinPoint;\r\n\t\t}\r\n\t\tif (!!this.data.bonusGameDatas) {\r\n\t\t\tSlot45EventManager.GetInstance().notify(\"PickUpdata\", this.data.bonusGameDatas);\r\n\t\t}\r\n\t\tSlot45EventManager.GetInstance().notify(\"DataRespond\", data.Cells);\r\n\t\tSlot45EventManager.GetInstance().notify(\"WinDataRespond\", this.data);\r\n\t}\r\n\r\n\tprivate onfeatureWinCompleted(): void {\r\n\t\tthis.onEndRound();\r\n\t}\r\n\r\n\tprivate onfeatureWinstarted(): void {\r\n\t\tthis.isFreespins = false;\r\n\t\t// if (this.oldata == null) { this.oldata = this.data; }\r\n\t\t// cc.tween(this.node).delay(1).call(() => {\r\n\t\t// \tSlot45EventManager.GetInstance().notify(\"SetOldItems\", this.oldata);\r\n\r\n\t\t// \tthis.oldata.featureDatas = [];\r\n\t\t// }).start();\r\n\t}\r\n\r\n\tpublic CheckExpandWild(data: any = null): boolean {\r\n\t\tif (data == null) { data = this.data; }\r\n\t\treturn data != null && data.isExpandWild;\r\n\t}\r\n\r\n\tpublic CheckWinLineData(data: any = null): boolean {\r\n\t\tif (data == null) { data = this.data; }\r\n\t\treturn data != null && (data.allWinLine || data.WinScatters.length > 0 || data.WinBonus.length > 0);\r\n\t}\r\n\r\n\tpublic CheckBonusFeatureTrigger(data: any = null): boolean {\r\n\t\tif (data == null) { data = this.data; }\r\n\t\treturn data != null && data.featureDatas.length > 0;\r\n\t}\r\n\r\n\tpublic CheckFreespinEnd(data: any = null): boolean {\r\n\t\tif (data == null) { data = this.data; }\r\n\t\treturn data != null && data.isFreespins && data.freespinLeft == 0;\r\n\t}\r\n\r\n\tpublic CheckFreespinContinue(data: any = null): boolean {\r\n\t\tif (data == null) { data = this.data; }\r\n\t\treturn data != null && data.freespinLeft > 0;\r\n\t}\r\n\r\n\tpublic CheckFreespinTrigger(featureDatas: any = null): boolean {\r\n\t\tif (this.CheckBonusPointTrigger(featureDatas))\r\n\t\t\treturn false;\r\n\t\tif (featureDatas == null) { featureDatas = this.featureDatas; }\r\n\r\n\t\tvar featureData = featureDatas.find(x => x.hitRule.includes(\"freespins\"));\r\n\t\treturn featureDatas && featureDatas.length > 0 && featureData != null && !featureData.isRetrigger;\r\n\t}\r\n\r\n\tpublic CheckBonusPointTrigger(featureDatas: any = null): boolean {\r\n\t\tif (featureDatas == null) { featureDatas = this.featureDatas; }\r\n\t\tvar featureData = featureDatas.find(x => x.hitRule.includes(\"bonus\"));\r\n\t\treturn featureDatas != null && featureDatas.length > 0 && featureData != null;\r\n\t}\r\n\r\n\tpublic CheckFreespinRetrigger(featureDatas: any = null): boolean {\r\n\t\tif (this.CheckBonusPointTrigger(featureDatas))\r\n\t\t\treturn false;\r\n\t\tif (featureDatas == null) { featureDatas = this.featureDatas; }\r\n\t\tvar featureData = featureDatas.find(x => x.hitRule.includes(\"freespins\"));\r\n\t\treturn featureDatas != null && featureDatas.length > 0 && featureData != null && featureData.isRetrigger;\r\n\t}\r\n\r\n\tpublic CheckComboWinPresentation(): boolean {\r\n\t\treturn this.comboCount < this.data.comboData.length;\r\n\t}\r\n\r\n\tpublic GetFeatureWinData(): any {\r\n\t\treturn this.featureDatas[0] || null;\r\n\t}\r\n\r\n\tpublic GetFreespinTotalWinPoint(): any {\r\n\t\treturn this.freespinTotalWinPoint;\r\n\t}\r\n\r\n\tpublic GetTotalWinPoint(): any {\r\n\t\treturn this.totalWinPoint;\r\n\t}\r\n\r\n\tpublic GetExpandWildIndices(): any {\r\n\t\treturn this.data.expandWildIndices;\r\n\t}\r\n\r\n\tpublic GetComboData(): any {\r\n\t\tvar comboData = this.data.comboData[this.comboCount];\r\n\t\tthis.processAllWinLinesComboData(comboData);\r\n\t\treturn comboData;\r\n\t}\r\n\r\n\tprivate processAllWinLinesComboData(inputData: any): any {\r\n\t\tlet winLine = inputData.WinLines;\r\n\t\tlet allWinResource = this.generateWinAllResource(winLine);\r\n\t\tif (allWinResource.GetWinPoint() > 0) {\r\n\t\t\tinputData.allWinLine = allWinResource;\r\n\t\t}\r\n\t\twinLine.sort(function (a: { winPoint: number; }, b: { winPoint: number; }) { return b.winPoint - a.winPoint });\r\n\t\tinputData.WinLines = winLine;\r\n\t}\r\n\r\n\tprivate processSpinData(inputData: any): any {\r\n\t\tlet data = Object.assign({}, inputData);\r\n\t\tlet winLine = data.WinLines;\r\n\t\tlet allWinResource = this.generateWinAllResource(winLine);\r\n\t\tlet winScatters = data.WinScatters;\r\n\t\tlet winBonus = data.WinBonus;\r\n\t\tif ((this.CheckFreespinContinue(inputData) && this.CheckFreespinRetrigger(data.featureDatas)) || this.CheckBonusFeatureTrigger(inputData)) {\r\n\t\t\twinLine = [];\r\n\t\t\twinBonus.forEach((lineBonus: any) => winLine.push(lineBonus));\r\n\t\t\twinScatters.forEach((lineScatter: any) => winLine.push(lineScatter));\r\n\t\t}\r\n\t\telse if (this.CheckFreespinContinue()) {\r\n\t\t\twinLine = [];\r\n\t\t}\r\n\t\tif (allWinResource.GetWinPoint() > 0) {\r\n\t\t\t// winLine.push(allWinResource);\r\n\t\t\tdata.allWinLine = allWinResource;\r\n\t\t}\r\n\t\twinLine.sort(function (a: { winPoint: number; }, b: { winPoint: number; }) { return b.winPoint - a.winPoint });\r\n\t\tdata.WinLines = winLine;\r\n\t\treturn data;\r\n\t}\r\n\r\n\tprivate generateWinAllResource(winLines: Slot45WinLineResult[]): any {\r\n\t\tlet winAllSymbols: any[] = [];\r\n\t\tlet winPoint = 0;\r\n\t\tlet winNumber: number[] = [];\r\n\t\tfor (let index = 0; index < winLines.length; index++) {\r\n\t\t\tlet winline = winLines[index].GetWinLine();\r\n\t\t\twinline.forEach(item => { winAllSymbols.push(item) });\r\n\t\t\twinPoint = winPoint + winLines[index].GetWinPoint();\r\n\t\t\twinLines[index].GetWinNumber().forEach(number => winNumber.push(number));\r\n\r\n\t\t}\r\n\t\twinAllSymbols = Array.from(new Set(winAllSymbols));\r\n\t\treturn new Slot45WinLineResult(winAllSymbols, winPoint, winNumber, '', true);\r\n\t}\r\n\r\n\tpublic CheckTurbo(): boolean {\r\n\t\treturn this.isTurbo;\r\n\t}\r\n\r\n\tprivate onEnterFreespins(): void {\r\n\t\tthis.isFreespins = true;\r\n\t}\r\n\r\n\tpublic CheckIsFreespin(): boolean {\r\n\t\treturn this.isFreespins;\r\n\t}\r\n\r\n\tpublic GetWinBonus():Slot45WinLineResult{\r\n\t\treturn this.data.WinBonus;\r\n\t}\r\n}\r\n"]}