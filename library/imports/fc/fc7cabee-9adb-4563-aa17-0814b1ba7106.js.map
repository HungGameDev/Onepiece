{"version":3,"sources":["assets\\Script\\base\\Util\\Slot45-number-converter.ts"],"names":[],"mappings":";;;;;;AACA;IAAA;IAgGA,CAAC;IA7Fc,mBAAQ,GAAtB;QACC,IAAI,CAAC,UAAU,CAAC,QAAQ;YACvB,UAAU,CAAC,QAAQ,GAAG,IAAI,UAAU,EAAE,CAAC;QACxC,OAAO,UAAU,CAAC,QAAQ,CAAC;IAC5B,CAAC;IAEM,iCAAY,GAAnB,UAAoB,WAAmB;QAEtC,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE;YACvB,OAAO,SAAS,CAAC,CAAC,4DAA4D;SAC9E;QAED,IAAI,WAAW,GAAG,GAAG,EAAE;YACtB,OAAO,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC9B;aAAM,IAAI,WAAW,GAAG,GAAG,EAAE;YAC7B,IAAM,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC;YACjC,OAAO,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACrG;aAAM,IAAI,WAAW,GAAG,GAAG,EAAE;YAC7B,IAAM,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC;YACjC,OAAO,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACrG;aAAM;YACN,IAAM,MAAM,GAAG,WAAW,GAAG,GAAG,CAAC;YACjC,OAAO,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACrG;IACF,CAAC;IAEM,iDAA4B,GAAnC,UAAoC,MAAc;QACjD,IAAI,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,EAAE,GAAG,MAAM,CAAC;QAChB,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACtC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EACnB;YACC,MAAM,GAAG,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,MAAM,CAAC;IACf,CAAC;IAEM,8BAAS,GAAhB,UAAiB,SAAwB,EAAE,OAAgB,EAAE,QAAiB;QAC7E,IAAI,OAAO,KAAK,KAAK,CAAC,EAAE;YAAE,OAAO,GAAG,CAAC,CAAC;SAAE,CAAC,2BAA2B;QACpE,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE;YAAE,QAAQ,GAAG,EAAE,CAAC;SAAE,CAAC,0BAA0B;QACtE,IAAI,WAAW,CAAC;QAChB,IAAI,cAAc,CAAC;QACnB,OAAO,IAAI,OAAO,CAAO,UAAU,OAAO,EAAE,MAAM;YACjD,IAAI,MAAM,GAAG;gBACZ,IAAI,SAAS,EAAE,EACf;oBACC,IAAI,cAAc,EAClB;wBACC,YAAY,CAAC,cAAc,CAAC,CAAC;qBAC7B;oBACD,OAAO,EAAE,CAAC;iBACV;qBAED;oBACC,WAAW,GAAG,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;iBAC3C;YACF,CAAC,CAAC;YACF,GAAG;YACH,WAAW,GAAG,UAAU,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAE3C,yCAAyC;YACzC,IAAI,OAAO,GAAG,CAAC,EACf;gBACC,cAAc,GAAG,UAAU,CAAC;oBAC3B,IAAI,WAAW,EACf;wBACC,YAAY,CAAC,WAAW,CAAC,CAAC;qBAC1B;oBAED,MAAM,CAAC;wBACN,IAAI,EAAE,SAAS;wBACf,OAAO,EAAE,SAAS;qBAClB,CAAC,CAAC;gBACJ,CAAC,EAAE,OAAO,CAAC,CAAC;aACZ;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,4CAAuB,GAA9B,UAA+B,SAAiB;QAC/C,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;QAEnC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACzC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3C,CAAC;IAEM,2CAAsB,GAA7B,UAA8B,SAAiB;QAC9C,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;QAEnC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvC,GAAG,GAAG,CAAC,CAAC,cAAc,EAAE,CAAA;IAC1B,CAAC;IACF,iBAAC;AAAD,CAhGA,AAgGC,IAAA","file":"","sourceRoot":"/","sourcesContent":["\r\nexport default class Slot45Util {\r\n\tprivate static instance: Slot45Util;\r\n\r\n\tpublic static Instance() {\r\n\t\tif (!Slot45Util.instance)\r\n\t\t\tSlot45Util.instance = new Slot45Util();\r\n\t\treturn Slot45Util.instance;\r\n\t}\r\n\r\n\tpublic NumberFormat(inputNumber: number): string {\r\n\r\n\t\tif (isNaN(inputNumber)) {\r\n\t\t\treturn undefined; // or handle the case differently based on your requirements\r\n\t\t}\r\n\t\r\n\t\tif (inputNumber < 1e3) {\r\n\t\t\treturn inputNumber.toString();\r\n\t\t} else if (inputNumber < 1e6) {\r\n\t\t\tconst result = inputNumber / 1e3;\r\n\t\t\treturn result % 1 === 0 ? result.toFixed(0) + 'K' : result.toFixed(result % 1 === 0.5 ? 1 : 3) + 'K';\r\n\t\t} else if (inputNumber < 1e9) {\r\n\t\t\tconst result = inputNumber / 1e6;\r\n\t\t\treturn result % 1 === 0 ? result.toFixed(0) + 'M' : result.toFixed(result % 1 === 0.5 ? 1 : 3) + 'M';\r\n\t\t} else {\r\n\t\t\tconst result = inputNumber / 1e9;\r\n\t\t\treturn result % 1 === 0 ? result.toFixed(0) + 'B' : result.toFixed(result % 1 === 0.5 ? 1 : 3) + 'B';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic NumberFormatWithoutCharacter(number: number): string {\r\n\t\tlet temp = number.toLocaleString('en-US').split(\".\");\r\n\t\tlet re = /\\,/gi;\r\n\t\tlet result = temp[0].replace(re, \".\");\r\n\t\tif (temp.length > 1)\r\n\t\t{\r\n\t\t\tresult = result + \",\" + temp[1];\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic WaitUntil(condition: () => boolean, timeout?: number, interval?: number): Promise<void> {\r\n\t\tif (timeout === void 0) { timeout = 0; } // if not set, wait forever\r\n\t\tif (interval === void 0) { interval = 50; } // default interval = 50ms\r\n\t\tlet waitHandler;\r\n\t\tlet timeoutHandler;\r\n\t\treturn new Promise<void>(function (resolve, reject) {\r\n\t\t\tlet waitFn = function () {\r\n\t\t\t\tif (condition())\r\n\t\t\t\t{\r\n\t\t\t\t\tif (timeoutHandler)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclearTimeout(timeoutHandler);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\twaitHandler = setTimeout(waitFn, interval);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// \r\n\t\t\twaitHandler = setTimeout(waitFn, interval);\r\n\r\n\t\t\t// timeout, if timeout <=0, never timeout\r\n\t\t\tif (timeout > 0)\r\n\t\t\t{\r\n\t\t\t\ttimeoutHandler = setTimeout(() => {\r\n\t\t\t\t\tif (waitHandler)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tclearTimeout(waitHandler);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treject({\r\n\t\t\t\t\t\tcode: \"TIMEOUT\",\r\n\t\t\t\t\t\tmessage: \"timeout\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}, timeout);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic ConvertTimeStampToHours(timestamp: number): string {\r\n\t\tlet u = new Date(timestamp * 1000);\r\n\r\n\t\treturn ('0' + u.getUTCHours()).slice(-2) +\r\n\t\t\t':' + ('0' + u.getUTCMinutes()).slice(-2) +\r\n\t\t\t':' + ('0' + u.getUTCSeconds()).slice(-2)\r\n\t}\r\n\r\n\tpublic ConvertTimeStampToDate(timestamp: number): string {\r\n\t\tlet u = new Date(timestamp * 1000);\r\n\r\n\t\treturn ('0' + u.getUTCDate()).slice(-2) +\r\n\t\t\t'-' + ('0' + u.getUTCMonth()).slice(-2) +\r\n\t\t\t'-' + u.getUTCFullYear()\r\n\t}\r\n}\r\n"]}