{"version":3,"sources":["assets\\Script\\base\\animation\\Slot45-spine-animation-handler.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Slot45SpineAnimationActor, { Slot45SpineAnimationData, Slot45SpineData } from \"./Slot45-spine-animation\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot45SpineAnimationHandler {\r\n\r\n    animation: Slot45SpineAnimationActor = null;\r\n    target: cc.Node = null;\r\n    skeletonData: sp.SkeletonData = null;\r\n    defaultDuration: number = 0;\r\n    animationData: Slot45SpineAnimationData[] = null;\r\n    spineData: Slot45SpineData = null;\r\n\r\n    public constructor(context: Slot45SpineAnimationActor, targetNode: cc.Node) {\r\n        this.animation = context;\r\n        this.target = targetNode;\r\n        this.skeletonData = this.animation.skeletonData;\r\n        this.defaultDuration = this.animation.defaultDuration;\r\n        this.animationData = this.animation.animationData;\r\n        this.spineData = this.animation.spineData;\r\n    }\r\n\r\n    public Play(targetNode: cc.Node, events: Function[], callback: Function): void {\r\n        this.animation.trackEntry = this.handleAnimation(this.spineData, targetNode);\r\n        this.handleCallback(callback);\r\n        this.handleSpineEvent(events);\r\n    }\r\n\r\n    public Stop(isCallComplete: boolean): void {\r\n        if (!this.animation.spineSkeleton || !this.animation.spineSkeleton.node || !this.animation.trackEntry) { return; }\r\n        this.animation.spineSkeleton.clearTracks();\r\n        this.animation.trackEntry = null;\r\n        this.animation.spineSkeleton.enabled = false;\r\n    }\r\n\r\n    public Destroy(): void {\r\n        this.animation = null;\r\n        this.target = null;\r\n        this.skeletonData = null;\r\n        this.defaultDuration = null;\r\n        this.animationData = null;\r\n        this.spineData = null;\r\n    }\r\n\r\n    private handleAnimation(spineData: Slot45SpineData, targetNode: cc.Node): any {\r\n\r\n        this.animation.spineSkeleton = targetNode.getComponent(sp.Skeleton) || targetNode.addComponent(sp.Skeleton);\r\n        this.animation.spineSkeleton.timeScale = spineData.TimeScale;\r\n        this.animation.spineSkeleton.enabled = true;\r\n        this.animation.spineSkeleton.skeletonData = this.skeletonData;\r\n        return this.animation.spineSkeleton.setAnimation(spineData.TrackIndex || 0, spineData.Name, spineData.IsLoop || false);\r\n    }\r\n\r\n    private handleCallback(callback: Function): void {\r\n        this.animation.spineSkeleton.setTrackCompleteListener(this.animation.trackEntry, callback);\r\n    }\r\n\r\n    private handleSpineEvent(events: Function[]): void {\r\n        this.animation.spineSkeleton.setEventListener((trackEntry, event) => {\r\n            events ? events[event.data.name]() : (() => { });\r\n        });\r\n    }\r\n}\r\n"]}