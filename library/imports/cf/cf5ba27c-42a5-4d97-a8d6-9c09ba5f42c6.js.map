{"version":3,"sources":["assets/Script/base/animation/aka-g1009-spine-animation-handler.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import G1009SpineAnimationActor, { G1009SpineAnimationData, G1009SpineData } from \"./aka-g1009-spine-animation\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class G1009SpineAnimationHandler {\n\n    animation: G1009SpineAnimationActor = null;\n    target: cc.Node = null;\n    skeletonData: sp.SkeletonData = null;\n    defaultDuration: number = 0;\n    animationData: G1009SpineAnimationData[] = null;\n    spineData: G1009SpineData = null;\n\n    public constructor(context: G1009SpineAnimationActor, targetNode: cc.Node) {\n        this.animation = context;\n        this.target = targetNode;\n        this.skeletonData = this.animation.skeletonData;\n        this.defaultDuration = this.animation.defaultDuration;\n        this.animationData = this.animation.animationData;\n        this.spineData = this.animation.spineData;\n    }\n\n    public Play(targetNode: cc.Node, events: Function[], callback: Function): void {\n        this.animation.trackEntry = this.handleAnimation(this.spineData, targetNode);\n        this.handleCallback(callback);\n        this.handleSpineEvent(events);\n    }\n\n    public Stop(isCallComplete: boolean): void {\n        if (!this.animation.spineSkeleton || !this.animation.spineSkeleton.node || !this.animation.trackEntry) { return; }\n        this.animation.spineSkeleton.clearTracks();\n        this.animation.trackEntry = null;\n        this.animation.spineSkeleton.enabled = false;\n    }\n\n    public Destroy(): void {\n        this.animation = null;\n        this.target = null;\n        this.skeletonData = null;\n        this.defaultDuration = null;\n        this.animationData = null;\n        this.spineData = null;\n    }\n\n    private handleAnimation(spineData: G1009SpineData, targetNode: cc.Node): any {\n\n        this.animation.spineSkeleton = targetNode.getComponent(sp.Skeleton) || targetNode.addComponent(sp.Skeleton);\n        this.animation.spineSkeleton.timeScale = spineData.TimeScale;\n        this.animation.spineSkeleton.enabled = true;\n        this.animation.spineSkeleton.skeletonData = this.skeletonData;\n        return this.animation.spineSkeleton.setAnimation(spineData.TrackIndex || 0, spineData.Name, spineData.IsLoop || false);\n    }\n\n    private handleCallback(callback: Function): void {\n        this.animation.spineSkeleton.setTrackCompleteListener(this.animation.trackEntry, callback);\n    }\n\n    private handleSpineEvent(events: Function[]): void {\n        this.animation.spineSkeleton.setEventListener((trackEntry, event) => {\n            events ? events[event.data.name]() : (() => { });\n        });\n    }\n}\n"]}