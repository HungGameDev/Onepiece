{"version":3,"sources":["assets\\Script\\base\\sound\\Slot45-music-player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Slot45SoundPlayerActor from \"./Slot45-sound-player\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot45MusicPlayerActor extends Slot45SoundPlayerActor {\r\n\r\n    isMute: boolean = false;\r\n    muteVolume: number = 1;\r\n    audioPlayingName: string = \"\";\r\n    audioPlayingID: number = -1;\r\n    tweenFadeOut: cc.Tween = cc.tween();\r\n   \r\n    private handleAudioClipLoaded(audioID: number, audioName: string, isLoop: boolean) {\r\n        \r\n        let startLoadTime = Date.now();\r\n        this.audioClips[audioName].once(\"load\", function () {\r\n            if (this.audioPlayingName != audioName)\r\n            {\r\n                cc.audioEngine.stopEffect(audioID);\r\n                return;\r\n            }\r\n\r\n            let totalLoadTime = (Date.now() - startLoadTime) / 1000;\r\n            if (totalLoadTime > this.GetAudioDuration(audioName) && isLoop == false)\r\n            {\r\n                this.Stop(audioName);\r\n            }\r\n            else\r\n            {\r\n                let audioCurrentTime = totalLoadTime % this.GetAudioDuration(audioName);\r\n                cc.audioEngine.setCurrentTime(audioID, audioCurrentTime);\r\n            }\r\n        });\r\n    }\r\n    \r\n    public Play(audioName: string, isLoop: boolean) {\r\n       \r\n        if (this.audioClips[audioName] != null)\r\n        {\r\n            let audioID = cc.audioEngine.playMusic(this.audioClips[audioName], isLoop);\r\n            this.audioPlayingName = audioName;\r\n            this.audioPlayingID = audioID;\r\n\r\n            if (!this.audioClips[audioName].loaded)\r\n            {\r\n                this.handleAudioClipLoaded(audioID, audioName, isLoop);\r\n            }\r\n        }\r\n    }\r\n\r\n    public Stop(audioName: string) {\r\n\r\n        audioName = audioName || this.audioPlayingName;\r\n        if (audioName != this.audioPlayingName)\r\n        {\r\n            return;\r\n        }\r\n        this.tweenFadeOut.stop();\r\n        cc.audioEngine.stopMusic();\r\n        this.audioPlayingName = \"\";\r\n    }\r\n    public StopWithFadeOut(audioName: string, duration: number) {\r\n   \r\n        if (arguments[1] == null)\r\n        {\r\n            duration = arguments[0];\r\n            audioName = this.audioPlayingName;\r\n        }\r\n        else if (audioName !== this.audioPlayingName)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let saveVolume = cc.audioEngine.getVolume(this.audioPlayingID);\r\n        let obj = {\r\n            _volume: saveVolume,\r\n            get volume() {\r\n                return this._volume\r\n            },\r\n            set volume(val) {\r\n                this._volume = val;\r\n                cc.audioEngine.setVolume(this.audioPlayingID, this._volume);\r\n            }\r\n        };\r\n        this.tweenFadeOut.stop()\r\n        this.tweenFadeOut = cc.tween(obj);\r\n        this.tweenFadeOut.to(duration, { volume: 0 });\r\n        this.tweenFadeOut.call(() => {\r\n            cc.audioEngine.setVolume(this.audioPlayingID, saveVolume);\r\n            this.Stop(audioName);\r\n        });\r\n        this.tweenFadeOut.start();\r\n    }\r\n\r\n    public Mute() {\r\n    \r\n        if (this.isMute == false)\r\n        {\r\n            this.isMute = true;\r\n            this.muteVolume = cc.audioEngine.getMusicVolume();\r\n            cc.audioEngine.setMusicVolume(0);\r\n        }\r\n    }\r\n\r\n    public Unmute() {\r\n    \r\n        if (this.isMute)\r\n        {\r\n            this.isMute = false;\r\n            cc.audioEngine.setMusicVolume(this.muteVolume);\r\n        }\r\n    }\r\n\r\n    public IsMute() {\r\n     \r\n        return this.isMute;\r\n    }\r\n\r\n    public SetVolume(volume: number) {\r\n      \r\n        if (this.isMute)\r\n        {\r\n            this.muteVolume = volume;\r\n        }\r\n        else\r\n        {\r\n            cc.audioEngine.setMusicVolume(volume);\r\n        }\r\n    }\r\n\r\n    public GetVolume() {\r\n   \r\n        if (this.isMute)\r\n        {\r\n            return this.muteVolume;\r\n        }\r\n        else\r\n        {\r\n            return cc.audioEngine.getMusicVolume();\r\n        }\r\n    }\r\n\r\n    public GetAudioDuration(audioName: string) {\r\n     \r\n        if (this.audioClips[audioName] != null)\r\n        {\r\n            return this.audioClips[audioName]._audio ? this.audioClips[audioName]._audio.duration : 0;\r\n        }\r\n    }\r\n\r\n    public GetAudioPlaying() {\r\n      \r\n        return this.audioPlayingName;\r\n    }\r\n}\r\n"]}