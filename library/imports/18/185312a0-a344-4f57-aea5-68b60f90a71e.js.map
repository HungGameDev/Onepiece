{"version":3,"sources":["assets\\Script\\base\\sound\\Slot45-sfs-player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Slot45SoundPlayerActor from \"./Slot45-sound-player\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Slot45SFXPlayerActor extends Slot45SoundPlayerActor {\r\n\r\n    isMute: boolean = false;\r\n    muteVolume: number = 1;\r\n    audioPlayings: any = {};\r\n    tweenFadeOuts: cc.Tween = cc.tween();\r\n\r\n    protected start(): void {\r\n        for (let index = 0, length = this.audioClips.length; index < length; index++)\r\n        {\r\n            let clip = this.audioClips[index];\r\n            this.audioPlayings[clip.name] = [];\r\n            this.tweenFadeOuts[clip.name] = cc.tween();\r\n        }\r\n    }\r\n  \r\n    private handleAudioClipLoaded(audioID: number, audioName: string, isLoop: boolean): void {\r\n\r\n        let startLoadTime = Date.now();\r\n        this.audioClips[audioName].once(\"load\", function () {\r\n            if (this.audioPlayings[audioName].indexOf(audioID) == -1)\r\n            {\r\n                cc.audioEngine.stopEffect(audioID);\r\n                return;\r\n            }\r\n\r\n            let totalLoadTime = (Date.now() - startLoadTime) / 1000;\r\n            if (totalLoadTime > this.GetAudioDuration(audioName) && isLoop == false)\r\n            {\r\n                this.Stop(audioName);\r\n            } else\r\n            {\r\n                let audioCurrentTime = totalLoadTime % this.GetAudioDuration(audioName);\r\n                cc.audioEngine.setCurrentTime(audioID, audioCurrentTime);\r\n            }\r\n        });\r\n    }\r\n\r\n    public AddAudio(audioClip: cc.AudioClip): void {\r\n      \r\n        if (audioClip instanceof cc.AudioClip && this.audioClips[audioClip.name] == null)\r\n        {\r\n            this.audioClips[audioClip.name] = audioClip;\r\n            this.audioClips.push(audioClip);\r\n            this.audioPlayings[audioClip.name] = [];\r\n            this.tweenFadeOuts[audioClip.name] = cc.tween();\r\n        }\r\n    }\r\n\r\n    public Play(audioName: string, isLoop: boolean): void {\r\n      \r\n        if (this.audioClips[audioName] != null)\r\n        {\r\n            let audioID = cc.audioEngine.playEffect(this.audioClips[audioName], isLoop);\r\n            this.audioPlayings[audioName].push(audioID);\r\n\r\n            cc.audioEngine.setFinishCallback(audioID, function (id) {\r\n                return function () {\r\n                    cc.js.array.fastRemove(this.audioPlayings[audioName], id);\r\n                }\r\n            }(audioID).bind(this));\r\n\r\n            if (!this.audioClips[audioName].loaded)\r\n            {\r\n                this.handleAudioClipLoaded(audioID, audioName, isLoop);\r\n            }\r\n        }\r\n    }\r\n\r\n    public Stop(audioName: string): void {\r\n      \r\n        if (this.audioClips[audioName] != null && this.audioPlayings[audioName].length > 0)\r\n        {\r\n            for (let index = 0; index < this.audioPlayings[audioName].length; index++)\r\n            {\r\n                let audioID = this.audioPlayings[audioName][index];\r\n                cc.audioEngine.stopEffect(audioID);\r\n            }\r\n            this.audioPlayings[audioName] = [];\r\n            this.tweenFadeOuts[audioName].stop()\r\n        }\r\n    }\r\n\r\n    public StopWithFadeOut(audioName: string, duration: number) {\r\n       \r\n        if (this.audioClips[audioName] != null && this.audioPlayings[audioName].length > 0)\r\n        {\r\n            let audioIDs = this.audioPlayings[audioName];\r\n            let saveVolume = cc.audioEngine.getVolume(audioIDs[0]);\r\n            let obj = {\r\n                _volume: saveVolume,\r\n                get volume() {\r\n                    return this._volume\r\n                },\r\n                set volume(val) {\r\n                    this._volume = val;\r\n                    audioIDs.forEach(item => cc.audioEngine.setVolume(item, this._volume));\r\n                }\r\n            };\r\n\r\n            let tweenFade = this.tweenFadeOuts[audioName];\r\n            tweenFade.stop()\r\n            tweenFade = cc.tween(obj);\r\n            tweenFade.to(duration, {\r\n                volume: 0\r\n            });\r\n            tweenFade.call(() => {\r\n                audioIDs.forEach(item => cc.audioEngine.setVolume(item, saveVolume));\r\n                this.Stop(audioName);\r\n            });\r\n            tweenFade.start();\r\n        }\r\n    }\r\n\r\n    public StopAll(): void {\r\n       \r\n        for (let audioName in this.audioPlayings)\r\n        {\r\n            this.Stop(audioName);\r\n        }\r\n    }\r\n\r\n    public StopAllNonLoopingSfx(): void {\r\n        for (let audioName in this.audioPlayings)\r\n        {\r\n            if (!this.CheckAudioLoop(audioName))\r\n            {\r\n                this.Stop(audioName);\r\n            }\r\n        }\r\n    }\r\n\r\n    public StopAllWithFadeOut(duration: number): void {\r\n \r\n        for (let audioName in this.audioPlayings)\r\n        {\r\n            this.StopWithFadeOut(audioName, duration);\r\n        }\r\n    }\r\n\r\n    public StopAllNonLoopingSfxWithFadeOut(duration: number): void {\r\n    \r\n        for (let audioName in this.audioPlayings)\r\n        {\r\n            if (!this.CheckAudioLoop(audioName))\r\n            {\r\n                this.StopWithFadeOut(audioName, duration);\r\n            }\r\n        }\r\n    }\r\n\r\n    public Mute(): void {\r\n       \r\n        if (this.isMute == false)\r\n        {\r\n            this.isMute = true;\r\n            this.muteVolume = cc.audioEngine.getEffectsVolume();\r\n            cc.audioEngine.setEffectsVolume(0);\r\n        }\r\n    }\r\n\r\n    public Unmute(): void {\r\n        \r\n        if (this.isMute)\r\n        {\r\n            this.isMute = false;\r\n            cc.audioEngine.setEffectsVolume(this.muteVolume);\r\n        }\r\n    }\r\n\r\n    public IsMute(): boolean {\r\n   \r\n        return this.isMute;\r\n    }\r\n\r\n    public SetVolume(volume): void {\r\n        \r\n        if (this.isMute)\r\n        {\r\n            this.muteVolume = volume;\r\n        } else\r\n        {\r\n            cc.audioEngine.setEffectsVolume(volume);\r\n        }\r\n    }\r\n\r\n    public GetVolume(): number {\r\n      \r\n        if (this.isMute)\r\n        {\r\n            return this.muteVolume;\r\n        } else\r\n        {\r\n            return cc.audioEngine.getEffectsVolume();\r\n        }\r\n    }\r\n\r\n    public GetAudioDuration(audioName): any {\r\n        \r\n        if (this.audioClips[audioName] != null)\r\n        {\r\n            return this.audioClips[audioName].duration;\r\n        }\r\n    }\r\n\r\n    public CheckAudioLoop(audioName): boolean {\r\n       \r\n        let isAudioLoop = false;\r\n        let audioPlaying = this.audioPlayings[audioName];\r\n        audioPlaying.forEach(function (audioID) {\r\n            if (cc.audioEngine.isLoop(audioID))\r\n            {\r\n                isAudioLoop = true;\r\n            }\r\n        });\r\n\r\n        return isAudioLoop;\r\n    }\r\n}\r\n"]}